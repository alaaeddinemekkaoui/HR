version: '3.8'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hr_db}
      POSTGRES_USER: ${POSTGRES_USER:-hr_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hr_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  web:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DEBUG: ${DEBUG:-True}
      SECRET_KEY: ${SECRET_KEY:-dev-secret}
      POSTGRES_DB: ${POSTGRES_DB:-hr_db}
      POSTGRES_USER: ${POSTGRES_USER:-hr_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hr_pass}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/1}
    depends_on:
      - db
      - redis

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY: 'False'
    ports:
      - "5050:5050"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Celery worker can be enabled later once Celery is configured in the project
  # celery:
  #   build: .
  #   command: celery -A hr_project worker -l info
  #   volumes:
  #     - .:/app
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
  #   depends_on:
  #     - redis
  #     - db

volumes:
  postgres_data:
  pgadmin_data:
